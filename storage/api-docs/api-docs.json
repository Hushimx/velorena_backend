{
    "openapi": "3.0.0",
    "info": {
        "title": "Velorena API Documentation",
        "description": "API documentation for Velorena Backend - Authentication and User Management",
        "contact": {
            "email": "admin@velorena.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://velorena_backend.test",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get user's appointments",
                "description": "Retrieve all appointments for the authenticated user with filtering, sorting, and pagination",
                "operationId": "812c4f15927f3d0e3e959538a6f1104b",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by appointment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "accepted",
                                "rejected",
                                "completed",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "designer_id",
                        "in": "query",
                        "description": "Filter by designer ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter from date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter to date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in service type, description, or notes",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "appointment_date",
                            "enum": [
                                "appointment_date",
                                "created_at",
                                "status"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Create new appointment",
                "description": "Create a new appointment with optional designer assignment. The appointment will be created with 'pending' status and can be claimed by designers later. Use the available-slots endpoint to check for available time slots before booking.",
                "operationId": "2b481df28ec53d2afb2ec7c9a3a77846",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "appointment_date",
                                    "appointment_time",
                                    "service_type"
                                ],
                                "properties": {
                                    "designer_id": {
                                        "description": "Designer ID (optional - can be assigned later)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "appointment_date": {
                                        "description": "Appointment date (must be today or future)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-09-08"
                                    },
                                    "appointment_time": {
                                        "description": "Appointment time (HH:MM) - must be from available slots",
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00"
                                    },
                                    "service_type": {
                                        "description": "Type of service requested",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Interior Design Consultation"
                                    },
                                    "description": {
                                        "description": "Detailed description of the service needed",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Need help with living room design"
                                    },
                                    "duration": {
                                        "description": "Duration in minutes (default: 30)",
                                        "type": "integer",
                                        "maximum": 480,
                                        "minimum": 30,
                                        "example": 30
                                    },
                                    "location": {
                                        "description": "Appointment location (optional)",
                                        "type": "string",
                                        "maxLength": 200,
                                        "example": "123 Main St, City"
                                    },
                                    "notes": {
                                        "description": "Additional notes for the appointment",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Please bring color samples"
                                    },
                                    "order_id": {
                                        "description": "Link to specific order (optional)",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "order_notes": {
                                        "description": "Notes related to the linked order",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Related to order #123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Appointment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 11
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "designer_id": {
                                                    "type": "integer",
                                                    "example": null
                                                },
                                                "appointment_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-09-08"
                                                },
                                                "appointment_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "10:00"
                                                },
                                                "service_type": {
                                                    "type": "string",
                                                    "example": "Interior Design Consultation"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - Bearer token required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create appointment"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/appointments/{appointment}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get appointment details",
                "description": "Retrieve detailed information about a specific appointment",
                "operationId": "170c166bfd2c92d2f4b48e94fc0ba747",
                "parameters": [
                    {
                        "name": "appointment",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access to appointment"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Update appointment",
                "description": "Update an existing appointment (only if status is pending or confirmed)",
                "operationId": "c9a722d7ce59c38c8957da679a6075e5",
                "parameters": [
                    {
                        "name": "appointment",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "designer_id": {
                                        "description": "Designer ID (optional)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "appointment_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-20"
                                    },
                                    "appointment_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:00"
                                    },
                                    "service_type": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Interior Design Consultation"
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Updated description"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "maximum": 480,
                                        "minimum": 30,
                                        "example": 90
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 200,
                                        "example": "456 Oak St, City"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Updated notes"
                                    },
                                    "order_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "order_notes": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Updated order notes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or cannot modify appointment"
                    },
                    "403": {
                        "description": "Unauthorized access to appointment"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Cancel appointment",
                "description": "Cancel a specific appointment (only if status is pending or confirmed)",
                "operationId": "d7abad41edc8f176f315fdd85f612419",
                "parameters": [
                    {
                        "name": "appointment",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment cancelled successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot cancel appointment"
                    },
                    "403": {
                        "description": "Unauthorized access to appointment"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/appointments/available-slots": {
            "get": {
                "tags": [
                    "Appointments",
                    "Availability"
                ],
                "summary": "Get available time slots",
                "description": "Retrieve available time slots for today or a specific date. This endpoint shows real-time availability by excluding already booked appointments. Returns 30-minute slots from 8 AM to 4 PM for all 7 days of the week (Monday-Sunday).",
                "operationId": "195575db1a73fa9f1ee6bc007132cf24",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date for available slots (optional, defaults to today). Format: YYYY-MM-DD. Must be today or in the future.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-09-08"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available time slots retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-09-08"
                                                },
                                                "day_of_week": {
                                                    "type": "string",
                                                    "example": "Monday"
                                                },
                                                "available_slots": {
                                                    "description": "Array of available time slots in HH:MM format",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "08:00"
                                                    },
                                                    "example": [
                                                        "08:00",
                                                        "08:30",
                                                        "09:00",
                                                        "09:30",
                                                        "10:00",
                                                        "10:30",
                                                        "11:00",
                                                        "11:30",
                                                        "12:00",
                                                        "12:30",
                                                        "13:00",
                                                        "13:30",
                                                        "14:00",
                                                        "14:30",
                                                        "15:00",
                                                        "15:30"
                                                    ]
                                                },
                                                "total_slots": {
                                                    "description": "Total number of available slots",
                                                    "type": "integer",
                                                    "example": 16
                                                },
                                                "slot_duration": {
                                                    "description": "Duration of each slot in minutes",
                                                    "type": "integer",
                                                    "example": 30
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed - Invalid date format or past date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The date must be a date after or equal to today."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to get available slots"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database connection error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Register a new user with the provided information",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_type",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "client_type": {
                                        "description": "Type of client account - individual person or company",
                                        "type": "string",
                                        "enum": [
                                            "individual",
                                            "company"
                                        ],
                                        "example": "individual"
                                    },
                                    "full_name": {
                                        "description": "Full name of the individual or primary contact person",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "company_name": {
                                        "description": "Company name (required if client_type is 'company')",
                                        "type": "string",
                                        "example": "Acme Corp"
                                    },
                                    "contact_person": {
                                        "description": "Name of the contact person for company accounts",
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "email": {
                                        "description": "Valid email address for account login and communications",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "description": "Phone number with country code for contact purposes",
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "description": "Street address for billing and delivery purposes",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "description": "City name for billing and delivery purposes",
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "country": {
                                        "description": "Country name for billing and delivery purposes",
                                        "type": "string",
                                        "example": "USA"
                                    },
                                    "vat_number": {
                                        "description": "VAT registration number for tax purposes (optional)",
                                        "type": "string",
                                        "example": "VAT123456"
                                    },
                                    "cr_number": {
                                        "description": "Commercial registration number for business accounts (optional)",
                                        "type": "string",
                                        "example": "CR123456"
                                    },
                                    "notes": {
                                        "description": "Additional notes or special requirements for the account",
                                        "type": "string",
                                        "example": "Important client"
                                    },
                                    "password": {
                                        "description": "Account password (minimum 8 characters)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation (must match password field)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "client_type": {
                                                            "type": "string",
                                                            "example": "individual"
                                                        },
                                                        "full_name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "company_name": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+1234567890"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user with email and password. Returns a Bearer token for API access.",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Registered email address for the account",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "Account password for authentication",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "client_type": {
                                                            "type": "string",
                                                            "example": "individual"
                                                        },
                                                        "full_name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "company_name": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+1234567890"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Logout the authenticated user and invalidate their token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get user profile",
                "description": "Get the authenticated user's profile information",
                "operationId": "getProfile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "client_type": {
                                                            "type": "string",
                                                            "example": "individual"
                                                        },
                                                        "full_name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "company_name": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "contact_person": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+1234567890"
                                                        },
                                                        "address": {
                                                            "type": "string",
                                                            "example": "123 Main St"
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "example": "New York"
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "example": "USA"
                                                        },
                                                        "vat_number": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "cr_number": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "notes": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-01T00:00:00.000000Z"
                                                        },
                                                        "cr_document_url": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "vat_document_url": {
                                                            "type": "string",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to get profile"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update user profile",
                "description": "Update the authenticated user's profile information. Only non-sensitive fields can be updated.",
                "operationId": "updateProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_type": {
                                        "description": "Type of client account - individual person or company",
                                        "type": "string",
                                        "enum": [
                                            "individual",
                                            "company"
                                        ],
                                        "example": "individual"
                                    },
                                    "full_name": {
                                        "description": "Full name of the individual or primary contact person",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "company_name": {
                                        "description": "Company name (required if client_type is 'company')",
                                        "type": "string",
                                        "example": "Acme Corp"
                                    },
                                    "contact_person": {
                                        "description": "Name of the contact person for company accounts",
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "phone": {
                                        "description": "Phone number with country code for contact purposes",
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "description": "Street address for billing and delivery purposes",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "description": "City name for billing and delivery purposes",
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "country": {
                                        "description": "Country name for billing and delivery purposes",
                                        "type": "string",
                                        "example": "USA"
                                    },
                                    "vat_number": {
                                        "description": "VAT registration number for tax purposes (optional)",
                                        "type": "string",
                                        "example": "VAT123456"
                                    },
                                    "cr_number": {
                                        "description": "Commercial registration number for business accounts (optional)",
                                        "type": "string",
                                        "example": "CR123456"
                                    },
                                    "notes": {
                                        "description": "Additional notes or special requirements for the account",
                                        "type": "string",
                                        "example": "Important client"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "client_type": {
                                                            "type": "string",
                                                            "example": "individual"
                                                        },
                                                        "full_name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "company_name": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "contact_person": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+1234567890"
                                                        },
                                                        "address": {
                                                            "type": "string",
                                                            "example": "123 Main St"
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "example": "New York"
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "example": "USA"
                                                        },
                                                        "vat_number": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "cr_number": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "notes": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-01T00:00:00.000000Z"
                                                        },
                                                        "cr_document_url": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "vat_document_url": {
                                                            "type": "string",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "full_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The full name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update profile"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all active categories",
                "description": "Retrieve a paginated list of active categories with optional search functionality. Categories are sorted by sort_order and then by name.",
                "operationId": "getCategories",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search categories by name in English or Arabic. Performs partial matching on category names.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "business"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination. Starts from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of categories to return per page. Minimum: 1, Maximum: 100, Default: 15.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Business Cards"
                                                            },
                                                            "name_ar": {
                                                                "type": "string",
                                                                "example": "بطاقات عمل"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Professional business cards for companies and individuals"
                                                            },
                                                            "description_ar": {
                                                                "type": "string",
                                                                "example": "بطاقات عمل احترافية للشركات والأفراد"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "is_active": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "sort_order": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-08-24T01:43:15.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-08-24T01:43:15.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve categories"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{category}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a specific category",
                "description": "Retrieve detailed information about a specific category",
                "operationId": "getCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Business Cards"
                                                },
                                                "name_ar": {
                                                    "type": "string",
                                                    "example": "بطاقات عمل"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Professional business cards for companies and individuals"
                                                },
                                                "description_ar": {
                                                    "type": "string",
                                                    "example": "بطاقات عمل احترافية للشركات والأفراد"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "sort_order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-08-24T01:43:15.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-08-24T01:43:15.000000Z"
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Standard Business Cards"
                                                            },
                                                            "name_ar": {
                                                                "type": "string",
                                                                "example": "بطاقات عمل قياسية"
                                                            },
                                                            "base_price": {
                                                                "type": "string",
                                                                "example": "50.00"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/documents/upload": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Upload document",
                "description": "Upload a document (CR document or VAT document) for the authenticated user. Supported file types: PDF, JPG, PNG, DOC, DOCX. Maximum file size: 10MB.",
                "operationId": "uploadDocument",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "type",
                                    "document"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "Type of document being uploaded. 'cr_document' for Commercial Registration documents, 'vat_document' for VAT registration documents.",
                                        "type": "string",
                                        "enum": [
                                            "cr_document",
                                            "vat_document"
                                        ],
                                        "example": "cr_document"
                                    },
                                    "document": {
                                        "description": "Document file to upload. Supported formats: PDF, JPG, PNG, DOC, DOCX. Maximum file size: 10MB. File should be clear and readable.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Document uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Document uploaded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "filename": {
                                                    "type": "string",
                                                    "example": "1703123456_1_cr_document.pdf"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "documents/1703123456_1_cr_document.pdf"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "http://localhost:8000/storage/documents/1703123456_1_cr_document.pdf"
                                                },
                                                "size": {
                                                    "type": "integer",
                                                    "example": 1024000
                                                },
                                                "mime_type": {
                                                    "type": "string",
                                                    "example": "application/pdf"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "cr_document"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "document": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The document field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to upload document"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/documents/delete": {
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Delete document",
                "description": "Delete a document (CR document or VAT document) for the authenticated user. This will remove the file from storage and clear the reference from the user's profile.",
                "operationId": "deleteDocument",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "Type of document to delete. 'cr_document' for Commercial Registration documents, 'vat_document' for VAT registration documents. This will permanently remove the document from storage.",
                                        "type": "string",
                                        "enum": [
                                            "cr_document",
                                            "vat_document"
                                        ],
                                        "example": "cr_document"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Document deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Document deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Document not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "type": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The type field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete document"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/documents/info": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get document information",
                "description": "Get information about a specific document (CR document or VAT document) for the authenticated user, including file details and download URL.",
                "operationId": "getDocumentInfo",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of document to get info for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "cr_document",
                                "vat_document"
                            ],
                            "example": "cr_document"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "type": {
                                                    "description": "Type of document (cr_document or vat_document)",
                                                    "type": "string",
                                                    "example": "cr_document"
                                                },
                                                "filename": {
                                                    "description": "Original filename of the uploaded document",
                                                    "type": "string",
                                                    "example": "1703123456_1_cr_document.pdf"
                                                },
                                                "url": {
                                                    "description": "Public URL to access/download the document",
                                                    "type": "string",
                                                    "example": "http://localhost:8000/storage/documents/1703123456_1_cr_document.pdf"
                                                },
                                                "size": {
                                                    "description": "File size in bytes",
                                                    "type": "integer",
                                                    "example": 1024000
                                                },
                                                "exists": {
                                                    "description": "Whether the file exists in storage",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "uploaded_at": {
                                                    "description": "Timestamp when the document was uploaded",
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Document not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "type": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The type field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to get document info"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get user's orders",
                "description": "Retrieve all orders for the authenticated user with filtering, sorting, and pagination",
                "operationId": "955bb77a45ae173a485fadb8befed93f",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by order status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "confirmed",
                                "shipped",
                                "delivered",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in order number or phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at",
                                "order_number",
                                "total",
                                "status"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create new order",
                "description": "Create a new order with products and options",
                "operationId": "2123ba58dadb22bd6f2c8081af562230",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "products"
                                ],
                                "properties": {
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "minimum": 1,
                                                    "example": 2
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer"
                                                    },
                                                    "example": [
                                                        1,
                                                        3
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "shipping_address": {
                                        "type": "string",
                                        "example": "123 Main St, City"
                                    },
                                    "billing_address": {
                                        "type": "string",
                                        "example": "123 Main St, City"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Please deliver in the morning"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders/{order}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details",
                "description": "Retrieve detailed information about a specific order",
                "operationId": "8114ac185cc1bf301d8862617e497098",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access to order"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete order",
                "description": "Delete a specific order (only if status is pending)",
                "operationId": "983c7813fdcb0d66fd5d1386fa8f6f22",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access to order"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/send-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send OTP to user",
                "description": "Send a one-time password (OTP) to the user's email, phone, or WhatsApp. The OTP can be used for verification purposes.",
                "operationId": "sendOtp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identifier",
                                    "type"
                                ],
                                "properties": {
                                    "identifier": {
                                        "description": "Email address or phone number where the OTP will be sent. For email OTP, use a valid email format. For SMS/WhatsApp, use international phone number format with country code.",
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "type": {
                                        "description": "Delivery method for the OTP. 'email' sends via email, 'sms' sends via text message, 'whatsapp' sends via WhatsApp, 'fake' generates a test OTP for development",
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "sms",
                                            "whatsapp",
                                            "fake"
                                        ],
                                        "example": "email"
                                    },
                                    "expiry_minutes": {
                                        "description": "Number of minutes before the OTP expires. Must be between 1-60 minutes. Default is 10 minutes if not specified.",
                                        "type": "integer",
                                        "maximum": 60,
                                        "minimum": 1,
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "otp_id": {
                                                    "type": "string",
                                                    "example": "123"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:10:00.000000Z"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "email"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "identifier": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The identifier field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to send OTP"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP code",
                "description": "Verify the OTP code sent to the user. The code must be exactly 6 digits and not expired.",
                "operationId": "verifyOtp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identifier",
                                    "code",
                                    "type"
                                ],
                                "properties": {
                                    "identifier": {
                                        "description": "Email address or phone number that was used when the OTP was sent. Must match exactly with the identifier used in the send-otp request.",
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "code": {
                                        "description": "6-digit OTP code received via the specified delivery method. Must be exactly 6 characters long.",
                                        "type": "string",
                                        "maxLength": 6,
                                        "minLength": 6,
                                        "example": "123456"
                                    },
                                    "type": {
                                        "description": "Delivery method that was used to send the OTP. Must match the type used in the send-otp request.",
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "sms",
                                            "whatsapp",
                                            "fake"
                                        ],
                                        "example": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:05:00.000000Z"
                                                },
                                                "otp_id": {
                                                    "type": "string",
                                                    "example": "123"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "code": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The code field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to verify OTP"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/resend-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend OTP to user",
                "description": "Resend a new OTP to the user. This will invalidate any previous OTP and generate a new one.",
                "operationId": "resendOtp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identifier",
                                    "type"
                                ],
                                "properties": {
                                    "identifier": {
                                        "description": "Email address or phone number where the new OTP will be sent. Must be the same identifier used in the original send-otp request.",
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "type": {
                                        "description": "Delivery method for the new OTP. Must be the same type used in the original send-otp request.",
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "sms",
                                            "whatsapp",
                                            "fake"
                                        ],
                                        "example": "email"
                                    },
                                    "expiry_minutes": {
                                        "description": "Number of minutes before the new OTP expires. Must be between 1-60 minutes. Default is 10 minutes if not specified.",
                                        "type": "integer",
                                        "maximum": 60,
                                        "minimum": 1,
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP resent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP resent successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "otp_id": {
                                                    "type": "string",
                                                    "example": "124"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:10:00.000000Z"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "email"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "identifier": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The identifier field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to resend OTP"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all active products",
                "description": "Retrieve a paginated list of active products with optional filtering by category and search functionality. Products include their options and values for customization.",
                "operationId": "getProducts",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter products by specific category ID. Only products from this category will be returned.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search products by name in English or Arabic. Performs partial matching on product names.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "business"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination. Starts from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of products to return per page. Minimum: 1, Maximum: 100, Default: 15.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "category_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Standard Business Cards"
                                                            },
                                                            "name_ar": {
                                                                "type": "string",
                                                                "example": "بطاقات عمل قياسية"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Professional business cards with various customization options"
                                                            },
                                                            "description_ar": {
                                                                "type": "string",
                                                                "example": "بطاقات عمل احترافية مع خيارات تخصيص متنوعة"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "base_price": {
                                                                "type": "string",
                                                                "example": "50.00"
                                                            },
                                                            "is_active": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "sort_order": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "specifications": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "category": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Business Cards"
                                                                    },
                                                                    "name_ar": {
                                                                        "type": "string",
                                                                        "example": "بطاقات عمل"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "options": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "name": {
                                                                            "type": "string",
                                                                            "example": "Paper Size"
                                                                        },
                                                                        "name_ar": {
                                                                            "type": "string",
                                                                            "example": "حجم الورق"
                                                                        },
                                                                        "type": {
                                                                            "type": "string",
                                                                            "example": "select"
                                                                        },
                                                                        "is_required": {
                                                                            "type": "boolean",
                                                                            "example": true
                                                                        },
                                                                        "values": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "integer",
                                                                                        "example": 1
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string",
                                                                                        "example": "Standard (85x55mm)"
                                                                                    },
                                                                                    "value_ar": {
                                                                                        "type": "string",
                                                                                        "example": "قياسي (85x55مم)"
                                                                                    },
                                                                                    "price_adjustment": {
                                                                                        "type": "string",
                                                                                        "example": "0.00"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve products"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{product}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a specific product",
                "description": "Retrieve detailed information about a specific product including its options and values",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "category_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Standard Business Cards"
                                                },
                                                "name_ar": {
                                                    "type": "string",
                                                    "example": "بطاقات عمل قياسية"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Professional business cards with various customization options"
                                                },
                                                "description_ar": {
                                                    "type": "string",
                                                    "example": "بطاقات عمل احترافية مع خيارات تخصيص متنوعة"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "base_price": {
                                                    "type": "string",
                                                    "example": "50.00"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "sort_order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "specifications": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-08-24T01:43:15.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-08-24T01:43:15.000000Z"
                                                },
                                                "category": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Business Cards"
                                                        },
                                                        "name_ar": {
                                                            "type": "string",
                                                            "example": "بطاقات عمل"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Paper Size"
                                                            },
                                                            "name_ar": {
                                                                "type": "string",
                                                                "example": "حجم الورق"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "select"
                                                            },
                                                            "is_required": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "values": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "value": {
                                                                            "type": "string",
                                                                            "example": "Standard (85x55mm)"
                                                                        },
                                                                        "value_ar": {
                                                                            "type": "string",
                                                                            "example": "قياسي (85x55مم)"
                                                                        },
                                                                        "price_adjustment": {
                                                                            "type": "string",
                                                                            "example": "0.00"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Appointments",
            "description": "Complete appointment management system - Create, read, update, and manage appointments with real-time availability checking"
        },
        {
            "name": "Availability",
            "description": "Real-time availability checking - Get available time slots for booking appointments"
        },
        {
            "name": "Orders",
            "description": "API Endpoints for order management"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "User Profile",
            "description": "User Profile"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Documents",
            "description": "Documents"
        },
        {
            "name": "Products",
            "description": "Products"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}