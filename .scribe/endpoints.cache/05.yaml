## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Product Options'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/products/{product_id}/options'
    metadata:
      groupName: 'Product Options'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all options for a product'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters:
      active:
        name: active
        description: 'Filter by active status.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of items per page.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      active: true
      per_page: 15
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "product_options": [
                {
                  "id": 1,
                  "name": "Paper Type",
                  "type": "select",
                  "is_required": true,
                  "affects_price": true,
                  "sort_order": 1,
                  "description": "Choose the type of paper for your business cards",
                  "values_count": 3,
                  "created_at": "2024-01-01T00:00:00.000000Z",
                  "updated_at": "2024-01-01T00:00:00.000000Z"
                }
              ],
              "pagination": {
                "current_page": 1,
                "last_page": 1,
                "per_page": 15,
                "total": 1
              }
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/product-options/{option_id}'
    metadata:
      groupName: 'Product Options'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific product option'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      option_id:
        name: option_id
        description: 'The ID of the product option.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      option_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "product_option": {
                "id": 1,
                "name": "Paper Type",
                "type": "select",
                "is_required": true,
                "affects_price": true,
                "sort_order": 1,
                "description": "Choose the type of paper for your business cards",
                "product": {
                  "id": 1,
                  "name": "Standard Business Cards",
                  "slug": "standard-business-cards"
                },
                "values": [
                  {
                    "id": 1,
                    "value": "glossy",
                    "label": "Glossy Paper",
                    "price_adjustment": "5.00",
                    "is_active": true,
                    "sort_order": 1
                  }
                ],
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product option not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/product-options
    metadata:
      groupName: 'Product Options'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new product option'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the option.'
        required: true
        example: 'Paper Type'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: 'The type of option (select, radio, checkbox, text, number).'
        required: true
        example: select
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_required:
        name: is_required
        description: 'Whether the option is required.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      affects_price:
        name: affects_price
        description: 'Whether the option affects the price.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_order:
        name: sort_order
        description: 'The sort order of the option.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the option.'
        required: false
        example: 'Choose the type of paper for your business cards'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_id: 1
      name: 'Paper Type'
      type: select
      is_required: true
      affects_price: true
      sort_order: 1
      description: 'Choose the type of paper for your business cards'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Product option created successfully",
            "data": {
              "product_option": {
                "id": 1,
                "name": "Paper Type",
                "type": "select",
                "is_required": true,
                "affects_price": true,
                "sort_order": 1,
                "description": "Choose the type of paper for your business cards",
                "product": {
                  "id": 1,
                  "name": "Standard Business Cards",
                  "slug": "standard-business-cards"
                },
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation failed",
            "errors": {
              "name": ["The name field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vDga1V36bPkh86a5cEZfd4e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/product-options/{option_id}'
    metadata:
      groupName: 'Product Options'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a product option'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      option_id:
        name: option_id
        description: 'The ID of the product option.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      option_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the option.'
        required: false
        example: 'Paper Type'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: 'The type of option (select, radio, checkbox, text, number).'
        required: false
        example: select
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_required:
        name: is_required
        description: 'Whether the option is required.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      affects_price:
        name: affects_price
        description: 'Whether the option affects the price.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_order:
        name: sort_order
        description: 'The sort order of the option.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the option.'
        required: false
        example: 'Choose the type of paper for your business cards'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_id: 1
      name: 'Paper Type'
      type: select
      is_required: true
      affects_price: true
      sort_order: 1
      description: 'Choose the type of paper for your business cards'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Product option updated successfully",
            "data": {
              "product_option": {
                "id": 1,
                "name": "Paper Type",
                "type": "select",
                "is_required": true,
                "affects_price": true,
                "sort_order": 1,
                "description": "Choose the type of paper for your business cards",
                "product": {
                  "id": 1,
                  "name": "Standard Business Cards",
                  "slug": "standard-business-cards"
                },
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product option not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 516e8vagab4dfckVPEZ6D3h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/product-options/{option_id}'
    metadata:
      groupName: 'Product Options'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a product option'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      option_id:
        name: option_id
        description: 'The ID of the product option.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      option_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Product option deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product option not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ba1E53V4h66gvZckeDf8daP'
    controller: null
    method: null
    route: null
    custom: []
