## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      client_type:
        name: client_type
        description: 'The type of client (individual or company).'
        required: true
        example: individual
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      full_name:
        name: full_name
        description: 'The full name of the user (required for individual clients).'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      company_name:
        name: company_name
        description: 'The company name (required for company clients).'
        required: true
        example: 'Acme Corp'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      contact_person:
        name: contact_person
        description: 'The contact person name (required for company clients).'
        required: true
        example: 'Jane Smith'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'The phone number.'
        required: false
        example: '+1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address:
        name: address
        description: 'The address.'
        required: false
        example: '123 Main St'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      city:
        name: city
        description: 'The city.'
        required: false
        example: 'New York'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country:
        name: country
        description: 'The country.'
        required: false
        example: USA
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      vat_number:
        name: vat_number
        description: 'The VAT number.'
        required: false
        example: VAT123456
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      cr_number:
        name: cr_number
        description: 'The CR number.'
        required: false
        example: CR123456
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'Additional notes.'
        required: false
        example: 'Important client'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password (minimum 8 characters).'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Password confirmation.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      client_type: individual
      full_name: 'John Doe'
      company_name: 'Acme Corp'
      contact_person: 'Jane Smith'
      email: john@example.com
      phone: '+1234567890'
      address: '123 Main St'
      city: 'New York'
      country: USA
      vat_number: VAT123456
      cr_number: CR123456
      notes: 'Important client'
      password: password123
      password_confirmation: password123
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "User registered successfully",
            "data": {
              "user": {
                "id": 1,
                "client_type": "individual",
                "full_name": "John Doe",
                "company_name": null,
                "email": "john@example.com",
                "phone": "+1234567890"
              },
              "token": "1|abc123..."
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation failed",
            "errors": {
              "email": ["The email field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login user'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john@example.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Login successful",
            "data": {
              "user": {
                "id": 1,
                "client_type": "individual",
                "full_name": "John Doe",
                "company_name": null,
                "email": "john@example.com",
                "phone": "+1234567890"
              },
              "token": "1|abc123..."
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation failed",
            "errors": {
              "email": ["The email field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Logged out successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c5VEbghdDZ613af846kvPea'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/send-otp
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send OTP'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      identifier:
        name: identifier
        description: 'The email or phone number to send OTP to.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: 'The type of OTP (email, sms, whatsapp, fake).'
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      expiry_minutes:
        name: expiry_minutes
        description: 'The expiry time in minutes (1-60).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      identifier: john@example.com
      type: email
      expiry_minutes: 10
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "OTP sent successfully",
            "data": {
              "otp_id": "123",
              "expires_at": "2024-01-01T00:10:00.000000Z",
              "type": "email"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation failed",
            "errors": {
              "identifier": ["The identifier field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/verify-otp
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verify OTP'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      identifier:
        name: identifier
        description: 'The email or phone number.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      code:
        name: code
        description: 'The 6-digit OTP code.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: 'The type of OTP (email, sms, whatsapp, fake).'
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      identifier: john@example.com
      code: '123456'
      type: email
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "OTP verified successfully",
            "data": {
              "verified_at": "2024-01-01T00:05:00.000000Z",
              "otp_id": "123"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "success": false,
            "message": "Invalid OTP code"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation failed",
            "errors": {
              "code": ["The code field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/resend-otp
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Resend OTP'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      identifier:
        name: identifier
        description: 'The email or phone number.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: 'The type of OTP (email, sms, whatsapp, fake).'
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      expiry_minutes:
        name: expiry_minutes
        description: 'The expiry time in minutes (1-60).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      identifier: john@example.com
      type: email
      expiry_minutes: 10
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "OTP resent successfully",
            "data": {
              "otp_id": "124",
              "expires_at": "2024-01-01T00:10:00.000000Z",
              "type": "email"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation failed",
            "errors": {
              "identifier": ["The identifier field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
