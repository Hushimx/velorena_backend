name: Products
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all products'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      category_id:
        name: category_id
        description: 'Filter by category ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      active:
        name: active
        description: 'Filter by active status.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      featured:
        name: featured
        description: 'Filter by featured status.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search in product name and description.'
        required: false
        example: 'business cards'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      min_price:
        name: min_price
        description: 'numeric Filter by minimum price.'
        required: false
        example: '10.00'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_price:
        name: max_price
        description: 'numeric Filter by maximum price.'
        required: false
        example: '100.00'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of items per page.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      category_id: 1
      active: true
      featured: true
      search: 'business cards'
      min_price: '10.00'
      max_price: '100.00'
      per_page: 15
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "products": [
                {
                  "id": 1,
                  "name": "Standard Business Cards",
                  "slug": "standard-business-cards",
                  "description": "High-quality standard business cards",
                  "specifications": {
                    "paper_weight": "300gsm",
                    "finish": "matte"
                  },
                  "base_price": "25.00",
                  "image_url": "http://example.com/storage/products/business-cards.jpg",
                  "is_active": true,
                  "is_featured": false,
                  "min_quantity": 100,
                  "max_quantity": 10000,
                  "unit": "piece",
                  "category": {
                    "id": 1,
                    "name": "Business Cards",
                    "slug": "business-cards"
                  },
                  "created_at": "2024-01-01T00:00:00.000000Z",
                  "updated_at": "2024-01-01T00:00:00.000000Z"
                }
              ],
              "pagination": {
                "current_page": 1,
                "last_page": 1,
                "per_page": 15,
                "total": 1
              }
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/products/featured
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get featured products'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      limit:
        name: limit
        description: 'Number of products to return.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      limit: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "products": [
                {
                  "id": 1,
                  "name": "Standard Business Cards",
                  "slug": "standard-business-cards",
                  "description": "High-quality standard business cards",
                  "base_price": "25.00",
                  "image_url": "http://example.com/storage/products/business-cards.jpg",
                  "is_featured": true,
                  "category": {
                    "id": 1,
                    "name": "Business Cards",
                    "slug": "business-cards"
                  }
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific product'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "product": {
                "id": 1,
                "name": "Standard Business Cards",
                "slug": "standard-business-cards",
                "description": "High-quality standard business cards",
                "specifications": {
                  "paper_weight": "300gsm",
                  "finish": "matte"
                },
                "base_price": "25.00",
                "image_url": "http://example.com/storage/products/business-cards.jpg",
                "is_active": true,
                "is_featured": false,
                "min_quantity": 100,
                "max_quantity": 10000,
                "unit": "piece",
                "category": {
                  "id": 1,
                  "name": "Business Cards",
                  "slug": "business-cards"
                },
                "options": [
                  {
                    "id": 1,
                    "name": "Paper Type",
                    "type": "select",
                    "is_required": true,
                    "affects_price": true,
                    "values": [
                      {
                        "id": 1,
                        "value": "glossy",
                        "label": "Glossy Paper",
                        "price_adjustment": "5.00"
                      }
                    ]
                  }
                ],
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new product'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the product.'
        required: true
        example: 'Standard Business Cards'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the product.'
        required: false
        example: 'High-quality standard business cards'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      specifications:
        name: specifications
        description: 'The product specifications.'
        required: false
        example:
          paper_weight: 300gsm
          finish: matte
        type: object
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      base_price:
        name: base_price
        description: 'The base price of the product.'
        required: true
        example: '25.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Whether the product is active.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_featured:
        name: is_featured
        description: 'Whether the product is featured.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_order:
        name: sort_order
        description: 'The sort order of the product.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      min_quantity:
        name: min_quantity
        description: 'The minimum quantity.'
        required: true
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_quantity:
        name: max_quantity
        description: 'The maximum quantity.'
        required: false
        example: 10000
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      unit:
        name: unit
        description: 'The unit of measurement.'
        required: true
        example: piece
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      category_id: 1
      name: 'Standard Business Cards'
      description: 'High-quality standard business cards'
      specifications:
        paper_weight: 300gsm
        finish: matte
      base_price: '25.00'
      is_active: true
      is_featured: false
      sort_order: 1
      min_quantity: 100
      max_quantity: 10000
      unit: piece
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Product created successfully",
            "data": {
              "product": {
                "id": 1,
                "name": "Standard Business Cards",
                "slug": "standard-business-cards",
                "description": "High-quality standard business cards",
                "specifications": {
                  "paper_weight": "300gsm",
                  "finish": "matte"
                },
                "base_price": "25.00",
                "image_url": null,
                "is_active": true,
                "is_featured": false,
                "min_quantity": 100,
                "max_quantity": 10000,
                "unit": "piece",
                "category": {
                  "id": 1,
                  "name": "Business Cards",
                  "slug": "business-cards"
                },
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation failed",
            "errors": {
              "name": ["The name field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer be813a6vVgcDdPfh5EZk6a4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a product'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the product.'
        required: false
        example: 'Standard Business Cards'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the product.'
        required: false
        example: 'High-quality standard business cards'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      specifications:
        name: specifications
        description: 'The product specifications.'
        required: false
        example:
          paper_weight: 300gsm
          finish: matte
        type: object
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      base_price:
        name: base_price
        description: 'The base price of the product.'
        required: false
        example: '25.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Whether the product is active.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_featured:
        name: is_featured
        description: 'Whether the product is featured.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_order:
        name: sort_order
        description: 'The sort order of the product.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      min_quantity:
        name: min_quantity
        description: 'The minimum quantity.'
        required: false
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_quantity:
        name: max_quantity
        description: 'The maximum quantity.'
        required: false
        example: 10000
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      unit:
        name: unit
        description: 'The unit of measurement.'
        required: false
        example: piece
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      category_id: 1
      name: 'Standard Business Cards'
      description: 'High-quality standard business cards'
      specifications:
        paper_weight: 300gsm
        finish: matte
      base_price: '25.00'
      is_active: true
      is_featured: false
      sort_order: 1
      min_quantity: 100
      max_quantity: 10000
      unit: piece
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Product updated successfully",
            "data": {
              "product": {
                "id": 1,
                "name": "Standard Business Cards",
                "slug": "standard-business-cards",
                "description": "High-quality standard business cards",
                "specifications": {
                  "paper_weight": "300gsm",
                  "finish": "matte"
                },
                "base_price": "25.00",
                "image_url": null,
                "is_active": true,
                "is_featured": false,
                "min_quantity": 100,
                "max_quantity": 10000,
                "unit": "piece",
                "category": {
                  "id": 1,
                  "name": "Business Cards",
                  "slug": "business-cards"
                },
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Z5bPhvfVa3ga4c618kDdEe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a product'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Product deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3c6vfbdeVaakZ4ghED15P86'
    controller: null
    method: null
    route: null
    custom: []
