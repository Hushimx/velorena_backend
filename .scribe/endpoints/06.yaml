name: 'Option Values'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/product-options/{option_id}/values'
    metadata:
      groupName: 'Option Values'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all values for a product option'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      option_id:
        name: option_id
        description: 'The ID of the product option.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      option_id: 1
    queryParameters:
      active:
        name: active
        description: 'Filter by active status.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of items per page.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      active: true
      per_page: 15
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "option_values": [
                {
                  "id": 1,
                  "value": "glossy",
                  "label": "Glossy Paper",
                  "price_adjustment": "5.00",
                  "is_active": true,
                  "sort_order": 1,
                  "display_label": "Glossy Paper",
                  "created_at": "2024-01-01T00:00:00.000000Z",
                  "updated_at": "2024-01-01T00:00:00.000000Z"
                }
              ],
              "pagination": {
                "current_page": 1,
                "last_page": 1,
                "per_page": 15,
                "total": 1
              }
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/option-values/{value_id}'
    metadata:
      groupName: 'Option Values'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific option value'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      value_id:
        name: value_id
        description: 'The ID of the option value.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      value_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "option_value": {
                "id": 1,
                "value": "glossy",
                "label": "Glossy Paper",
                "price_adjustment": "5.00",
                "is_active": true,
                "sort_order": 1,
                "display_label": "Glossy Paper",
                "product_option": {
                  "id": 1,
                  "name": "Paper Type",
                  "type": "select"
                },
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Option value not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/option-values
    metadata:
      groupName: 'Option Values'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new option value'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_option_id:
        name: product_option_id
        description: 'The ID of the product option.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      value:
        name: value
        description: 'The value of the option.'
        required: true
        example: glossy
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      label:
        name: label
        description: 'The display label for the option.'
        required: false
        example: 'Glossy Paper'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      price_adjustment:
        name: price_adjustment
        description: 'The price adjustment when this option is selected.'
        required: true
        example: '5.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Whether the option value is active.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_order:
        name: sort_order
        description: 'The sort order of the option value.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_option_id: 1
      value: glossy
      label: 'Glossy Paper'
      price_adjustment: '5.00'
      is_active: true
      sort_order: 1
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Option value created successfully",
            "data": {
              "option_value": {
                "id": 1,
                "value": "glossy",
                "label": "Glossy Paper",
                "price_adjustment": "5.00",
                "is_active": true,
                "sort_order": 1,
                "display_label": "Glossy Paper",
                "product_option": {
                  "id": 1,
                  "name": "Paper Type",
                  "type": "select"
                },
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation failed",
            "errors": {
              "value": ["The value field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aVd1aEe64k58vPhbZ36gfDc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/option-values/{value_id}'
    metadata:
      groupName: 'Option Values'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an option value'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      value_id:
        name: value_id
        description: 'The ID of the option value.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      value_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_option_id:
        name: product_option_id
        description: 'The ID of the product option.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      value:
        name: value
        description: 'The value of the option.'
        required: false
        example: glossy
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      label:
        name: label
        description: 'The display label for the option.'
        required: false
        example: 'Glossy Paper'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      price_adjustment:
        name: price_adjustment
        description: 'The price adjustment when this option is selected.'
        required: false
        example: '5.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Whether the option value is active.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_order:
        name: sort_order
        description: 'The sort order of the option value.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_option_id: 1
      value: glossy
      label: 'Glossy Paper'
      price_adjustment: '5.00'
      is_active: true
      sort_order: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Option value updated successfully",
            "data": {
              "option_value": {
                "id": 1,
                "value": "glossy",
                "label": "Glossy Paper",
                "price_adjustment": "5.00",
                "is_active": true,
                "sort_order": 1,
                "display_label": "Glossy Paper",
                "product_option": {
                  "id": 1,
                  "name": "Paper Type",
                  "type": "select"
                },
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Option value not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pc8V66Z5DEf4dvahgkea31b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/option-values/{value_id}'
    metadata:
      groupName: 'Option Values'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an option value'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      value_id:
        name: value_id
        description: 'The ID of the option value.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      value_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Option value deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Option value not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h6dPc8a15Z6kEfe3abvVDg4'
    controller: null
    method: null
    route: null
    custom: []
