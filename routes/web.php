<?php

use Livewire\Livewire;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Route;
use Illuminate\Support\Facades\Log;

// Import middleware classes directly
use App\Http\Controllers\HomeController;
use Mcamara\LaravelLocalization\Facades\LaravelLocalization;
use Mcamara\LaravelLocalization\Middleware\LocaleSessionRedirect;
use Mcamara\LaravelLocalization\Middleware\LaravelLocalizationViewPath;
use Mcamara\LaravelLocalization\Middleware\LaravelLocalizationRedirectFilter;

// Test route for debugging
Route::get('/test-swagger', function () {
    return response()->json(['message' => 'Test route working', 'timestamp' => now()]);
});

// Language switch is now handled by Laravel Localization package automatically

// User routes (generated by laravel/ui)

Route::group(
    [
        'prefix' => LaravelLocalization::setLocale(),
        'middleware' => [
            LocaleSessionRedirect::class,
            LaravelLocalizationRedirectFilter::class,
            LaravelLocalizationViewPath::class
        ]
    ],
    function () {

        // this solve conflict between livewire 3 and mcamara localization
        Livewire::setUpdateRoute(function ($handle) {
            return Route::post('/livewire/update', $handle);
        });

        Auth::routes();

        Route::get('/', function () {
            return view('users.welcome');
        });
        Route::get('/home', [HomeController::class, 'index'])->name('home');
        Route::get('/dashboard', [HomeController::class, 'index'])->name('dashboard');
        // Route::view('/success', "admin.auth.success");

        require __DIR__ . '/admin_routes.php';
        require __DIR__ . '/designer_routes.php';
        require __DIR__ . '/marketer_routes.php';

        // User routes
        Route::middleware(['auth'])->group(function () {
            // Products routes
            Route::get('/products', function () {
                return view('users.products.index');
            })->name('user.products.index');

            Route::get('/products/{product}', function (App\Models\Product $product) {
                if (!$product->is_active) {
                    abort(404);
                }
                // Load product with options and their values
                $product->load(['category', 'options.values']);
                
                // Debug: Log the product data
                Log::info('Product loaded:', [
                    'id' => $product->id,
                    'name' => $product->name,
                    'options_count' => $product->options->count(),
                    'options' => $product->options->map(function($option) {
                        return [
                            'id' => $option->id,
                            'name' => $option->name,
                            'type' => $option->type,
                            'values_count' => $option->values->count()
                        ];
                    })
                ]);
                
                return view('users.products.show', compact('product'));
            })->name('user.products.show');

            // Appointment routes
            Route::get('/appointments', [App\Http\Controllers\AppointmentController::class, 'index'])->name('appointments.index');
            Route::get('/appointments/create', [App\Http\Controllers\AppointmentController::class, 'create'])->name('appointments.create');
            Route::post('/appointments', [App\Http\Controllers\AppointmentController::class, 'store'])->name('appointments.store');
            Route::get('/appointments/{appointment}', [App\Http\Controllers\AppointmentController::class, 'show'])->name('appointments.show');
            Route::patch('/appointments/{appointment}/cancel', [App\Http\Controllers\AppointmentController::class, 'cancel'])->name('appointments.cancel');
            Route::get('/appointments/slots', [App\Http\Controllers\AppointmentController::class, 'getAvailableSlots'])->name('appointments.slots');

            // Cart routes
            Route::get('/cart', [App\Http\Controllers\CartController::class, 'index'])->name('cart.index');

            // Orders routes
            Route::get('/orders', [App\Http\Controllers\UserOrderController::class, 'index'])->name('user.orders.index');
            Route::get('/orders/{order}', [App\Http\Controllers\UserOrderController::class, 'show'])->name('user.orders.show');
            Route::delete('/orders/{order}', [App\Http\Controllers\UserOrderController::class, 'destroy'])->name('user.orders.destroy');

            // Client Area routes
            Route::prefix('client')->name('client.')->group(function () {
                Route::get('/', [App\Http\Controllers\ClientAreaController::class, 'index'])->name('index');
                Route::get('/orders', [App\Http\Controllers\ClientAreaController::class, 'orders'])->name('orders');
                Route::get('/appointments', [App\Http\Controllers\ClientAreaController::class, 'appointments'])->name('appointments');
                Route::get('/orders/{order}', [App\Http\Controllers\ClientAreaController::class, 'orderDetails'])->name('order.details');
                Route::get('/appointments/{appointment}', [App\Http\Controllers\ClientAreaController::class, 'appointmentDetails'])->name('appointment.details');
            });

            // Product Design Selection routes
            Route::get('/products/{product}/designs', [App\Http\Controllers\ProductDesignController::class, 'index'])->name('user.product.designs');
            Route::post('/products/{product}/designs', [App\Http\Controllers\ProductDesignController::class, 'store'])->name('user.product.designs.store');
            Route::post('/products/{product}/designs/sync', [App\Http\Controllers\ProductDesignController::class, 'syncDesigns'])->name('user.product.designs.sync');
            Route::delete('/products/{product}/designs/{design}', [App\Http\Controllers\ProductDesignController::class, 'destroy'])->name('user.product.designs.destroy');
        });

        // Payment test routes (no authentication required for testing)
        Route::get('/payment-test', function () {
            return view('payment.test');
        })->name('payment.test');

        // Payment success/cancel routes
        Route::get('/payment/success', function () {
            return view('payment.success');
        })->name('payment.success');

        Route::get('/payment/cancel', function () {
            return view('payment.cancel');
        })->name('payment.cancel');
    }
);

// Design selection routes
Route::middleware(['auth'])->group(function () {
    Route::get('/designs', [App\Http\Controllers\DesignController::class, 'index'])->name('designs.index');
    Route::get('/designs/select-for-product/{product}', [App\Http\Controllers\DesignController::class, 'selectForProduct'])->name('designs.select-for-product');
    Route::post('/designs/save-for-product/{product}', [App\Http\Controllers\DesignController::class, 'saveDesignsForProduct'])->name('designs.save-for-product');
    Route::delete('/designs/remove-from-product/{product}/{design}', [App\Http\Controllers\DesignController::class, 'removeDesignFromProduct'])->name('designs.remove-from-product');
    Route::post('/designs/sync-from-api', [App\Http\Controllers\DesignController::class, 'syncFromApi'])->name('designs.sync-from-api');
});
